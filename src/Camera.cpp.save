#include "Camera.h"

Camera::Camera()
{
    direction = *new Vector(0.0, 1.0, -1.0);
    position = *new Vector(0.0, 0.0, 5.0);
}

Camera::~Camera()
{
    //dtor
}

void Camera::reshape(int ww, int hh)
{
	height = hh;
	width = ww;
	// Prevent a divide by zero, when window is too short
	// (you cant make a window of zero width).
	if (height == 0)
		height = 1;

	float ratio =  width * 1.0 / height;

	// Use the Projection Matrix
	glMatrixMode(GL_PROJECTION);

	// Reset Matrix
	glLoadIdentity();

	// Set the viewport to be the entire window
	glViewport(0, 0, width, height);

	// Set the correct perspective.
	gluPerspective(45.0f, ratio, 0.1f, 100.0f);

	// Get Back to the Modelview
	glMatrixMode(GL_MODELVIEW);
}

void Camera::initView()
{
    gluLookAt(	position.x, 1.0f, position.z,
			position.x+direction.x, 1.0f,  position.z+direction.z,
			0.0f, 1.0f,  0.0f);
    gluLookAt(	position.x, position.y, position.z,
                position.x+direction.x, position.y+direction.y,  position.z+direction.z,
                0.0f, 1.0f,  0.0f);
}

void Camera::initViewAt()
{
    gluLookAt(	position.x, position.y, position.z,
                direction.x, direction.y,  direction.z,
                0.0f, 1.0f,  0.0f);
}
