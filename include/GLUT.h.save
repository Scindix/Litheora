#include <include.h>
#include <gl_inc_hs.h>

#ifndef GLUT_H
#define GLUT_H


class GLUT
{
    public:
        GLUT();
        virtual ~GLUT();
        
        static void init();
        
        static std::function<void(void)> onReDisplay;
        static std::function<void(int, int)> onReshape;
        static std::function<void(void)> onIdle;

        static std::function<void(unsigned char, int, int)> onKeyPress;
        static std::function<void(int, int, int)> onKeyDown;
        static std::function<void(int, int, int)> onKeyUp;
        static std::function<void(int, int, int, int)> onMouseMove;
        static std::function<void(int, int)> onPassiveMouseMove;
        
    protected:
    private:
        static void reDisplayFunc(void);
        static void reshapeFunc(int, int);
        static void idleFunc(void);

        static void keyPressFunc(unsigned char, int, int);
        static void keyDownFunc(int, int, int);
        static void keyUpFunc(int, int, int);
        static void mouseMoveFunc(int, int, int, int);
        static void passiveMouseMoveFunc(int, int);
};

#endif // GLUT_H
